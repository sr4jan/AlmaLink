"use strict";(()=>{var e={};e.id=8406,e.ids=[8406],e.modules={1152:(e,t,n)=>{n.a(e,async(e,r)=>{try{n.r(t),n.d(t,{config:()=>d,default:()=>u,routeModule:()=>c});var i=n(3480),a=n(8667),o=n(6435),s=n(9070),l=e([s]);s=(l.then?(await l)():l)[0];let u=(0,o.M)(s,"default"),d=(0,o.M)(s,"config"),c=new i.PagesAPIRouteModule({definition:{kind:a.A.PAGES_API,page:"/api/auth/create-admin",pathname:"/api/auth/create-admin",bundlePath:"",filename:""},userland:s});r()}catch(e){r(e)}})},2833:(e,t,n)=>{n.d(t,{A:()=>o});var r=n(6037),i=n.n(r);let a=new(i()).Schema({username:{type:String,required:!0},email:{type:String,required:!0,unique:!0},password:{type:String,required:!0},role:{type:String,required:!0,enum:["student","alumni","admin","superadmin"]},isVerified:{type:Boolean,default:!1},profile:{firstName:String,lastName:String,avatar:String,college:{id:{type:i().Schema.Types.ObjectId,ref:"College"},name:{type:String,required:function(){return["student","alumni"].includes(this.role)}},graduationYear:{type:Number,required:function(){return["student","alumni"].includes(this.role)}},degree:{type:String,required:function(){return["student","alumni"].includes(this.role)}},major:{type:String,required:function(){return["student","alumni"].includes(this.role)}}},company:{name:String,position:String,startDate:Date,endDate:Date,current:Boolean},location:String,bio:String,skills:[String],experience:[{title:String,company:String,startDate:Date,endDate:Date,description:String,current:Boolean}],socialLinks:{linkedin:String,github:String,portfolio:String}},collegeId:{type:i().Schema.Types.ObjectId,ref:"College",required:!0},connections:[{type:i().Schema.Types.ObjectId,ref:"User"}],followers:[{type:i().Schema.Types.ObjectId,ref:"User"}],following:[{type:i().Schema.Types.ObjectId,ref:"User"}]},{timestamps:!0}),o=i().models.User||i().model("User",a)},3139:e=>{e.exports=import("bcryptjs")},3480:(e,t,n)=>{e.exports=n(5600)},3551:(e,t,n)=>{n.d(t,{A:()=>o});var r=n(6037),i=n.n(r);let a=new(i()).Schema({name:{type:String,required:!0},code:{type:String,required:!0,unique:!0},domain:{type:String,required:!0,unique:!0},location:{city:String,state:String,country:String},status:{type:String,enum:["active","inactive","pending"],default:"active"},createdAt:{type:Date,default:Date.now}},{timestamps:!0}),o=i().models.College||i().model("College",a)},3759:(e,t,n)=>{n.d(t,{A:()=>s});var r=n(6037),i=n.n(r);let a=process.env.MONGODB_URI;if(!a)throw Error("Please define the MONGODB_URI environment variable in .env.local");let o=global.mongoose;o||(o=global.mongoose={conn:null,promise:null});let s=async function(){return o.conn||(o.promise||(o.promise=i().connect(a).then(e=>e)),o.conn=await o.promise),o.conn}},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6037:e=>{e.exports=require("mongoose")},6435:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},8667:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return n}});var n=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},9070:(e,t,n)=>{n.a(e,async(e,r)=>{try{n.r(t),n.d(t,{default:()=>u});var i=n(3759),a=n(2833),o=n(3551),s=n(3139),l=e([s]);async function u(e,t){if("POST"!==e.method)return t.status(405).json({message:"Method not allowed"});try{await (0,i.A)();let{username:n,email:r,password:l,collegeCode:u}=e.body;if(!n||!r||!l||!u)return t.status(400).json({message:"All fields are required"});if(await a.A.findOne({$or:[{email:r},{username:n}]}))return t.status(400).json({message:"User with this email or username already exists"});let d=await o.A.findOne({code:u});if(!d)return t.status(400).json({message:"Invalid college code"});if(await a.A.findOne({role:"admin","profile.college.id":d._id}))return t.status(400).json({message:"College already has an admin"});let c=await s.default.hash(l,12),m=await a.A.create({username:n,email:r,password:c,role:"admin",isVerified:!0,profile:{college:{id:d._id,name:d.name},bio:`Admin at ${d.name}`}});return d.admin=m._id,await d.save(),t.status(201).json({message:"Admin account created successfully",admin:{id:m._id,username:m.username,email:m.email,college:d.name}})}catch(e){return console.error("Error creating admin:",e),t.status(500).json({message:"Error creating admin account"})}}s=(l.then?(await l)():l)[0],r()}catch(e){r(e)}})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var n=t(t.s=1152);module.exports=n})();
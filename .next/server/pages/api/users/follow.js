"use strict";(()=>{var e={};e.id=6187,e.ids=[6187],e.modules={2833:(e,t,r)=>{r.d(t,{A:()=>a});var n=r(6037),i=r.n(n);let o=new(i()).Schema({username:{type:String,required:!0},email:{type:String,required:!0,unique:!0},password:{type:String,required:!0},role:{type:String,required:!0,enum:["student","alumni","admin","superadmin"]},isVerified:{type:Boolean,default:!1},profile:{firstName:String,lastName:String,avatar:String,college:{id:{type:i().Schema.Types.ObjectId,ref:"College"},name:{type:String,required:function(){return["student","alumni"].includes(this.role)}},graduationYear:{type:Number,required:function(){return["student","alumni"].includes(this.role)}},degree:{type:String,required:function(){return["student","alumni"].includes(this.role)}},major:{type:String,required:function(){return["student","alumni"].includes(this.role)}}},company:{name:String,position:String,startDate:Date,endDate:Date,current:Boolean},location:String,bio:String,skills:[String],experience:[{title:String,company:String,startDate:Date,endDate:Date,description:String,current:Boolean}],socialLinks:{linkedin:String,github:String,portfolio:String}},collegeId:{type:i().Schema.Types.ObjectId,ref:"College",required:!0},connections:[{type:i().Schema.Types.ObjectId,ref:"User"}],followers:[{type:i().Schema.Types.ObjectId,ref:"User"}],following:[{type:i().Schema.Types.ObjectId,ref:"User"}]},{timestamps:!0}),a=i().models.User||i().model("User",o)},3480:(e,t,r)=>{e.exports=r(5600)},3759:(e,t,r)=>{r.d(t,{A:()=>s});var n=r(6037),i=r.n(n);let o=process.env.MONGODB_URI;if(!o)throw Error("Please define the MONGODB_URI environment variable in .env.local");let a=global.mongoose;a||(a=global.mongoose={conn:null,promise:null});let s=async function(){return a.conn||(a.promise||(a.promise=i().connect(o).then(e=>e)),a.conn=await a.promise),a.conn}},4722:e=>{e.exports=require("next-auth/react")},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6037:e=>{e.exports=require("mongoose")},6435:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},8667:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return r}});var r=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},9712:(e,t,r)=>{r.r(t),r.d(t,{config:()=>p,default:()=>c,routeModule:()=>m});var n={};r.r(n),r.d(n,{default:()=>d});var i=r(3480),o=r(8667),a=r(6435),s=r(3759),u=r(2833),l=r(4722);async function d(e,t){if("POST"!==e.method)return t.status(405).json({message:"Method not allowed"});try{await (0,s.A)();let r=await (0,l.getSession)({req:e});if(!r)return t.status(401).json({message:"Unauthorized"});let{userId:n}=e.body,i=await u.A.findOne({email:r.user.email});return await u.A.findByIdAndUpdate(i._id,{$addToSet:{following:n}}),await u.A.findByIdAndUpdate(n,{$addToSet:{followers:i._id}}),t.status(200).json({message:"Successfully followed user"})}catch(e){return console.error("Error following user:",e),t.status(500).json({message:"Server error"})}}let c=(0,a.M)(n,"default"),p=(0,a.M)(n,"config"),m=new i.PagesAPIRouteModule({definition:{kind:o.A.PAGES_API,page:"/api/users/follow",pathname:"/api/users/follow",bundlePath:"",filename:""},userland:n})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=t(t.s=9712);module.exports=r})();